; ModuleID = '/home/nacho/Documentos/LLVM/_build/course2/ex/test/Output/crc32.c.tmp.oc.ll'
source_filename = "/home/nacho/Documentos/LLVM/course2/ex/test/crc32.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [19 x i8] c"Usage: %s message\0A\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"0x%04x-%s\0A\00", align 1

; Function Attrs: nounwind uwtable
define dso_local i32 @main(i32 %argc, i8** nocapture readonly %argv) local_unnamed_addr #0 {
entry:
  %cmp = icmp slt i32 %argc, 2, !instr.id !2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %1 = load i8*, i8** %argv, align 8, !tbaa !3
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* %1) #2, !instr.id !7
  br label %return

if.end:                                           ; preds = %entry
  %arrayidx1 = getelementptr inbounds i8*, i8** %argv, i64 1
  %2 = load i8*, i8** %arrayidx1, align 8, !tbaa !3
  %3 = load i8, i8* %2, align 1, !tbaa !8, !instr.id !9
  %cmp23.i = icmp eq i8 %3, 0, !instr.id !10
  br i1 %cmp23.i, label %crc32.exit, label %while.body.i

while.body.i:                                     ; preds = %if.end, %while.body.i
  %indvars.iv.i = phi i64 [ %Result906, %while.body.i ], [ 0, %if.end ]
  %4 = phi i8 [ %37, %while.body.i ], [ %3, %if.end ]
  %crc.024.i = phi i32 [ %xor8.7.i, %while.body.i ], [ -1, %if.end ]
  %conv.i = zext i8 %4 to i32, !instr.id !11
  %xor.i = xor i32 %crc.024.i, %conv.i, !instr.id !12
  %5 = sub nsw i32 0, %conv.i, !instr.id !13
  %XAndY396 = shl nuw nsw i32 %conv.i, 1, !instr.id !14
  %shift1397 = and i32 %XAndY396, 2, !instr.id !15
  %XXorY398 = xor i32 %conv.i, 1, !instr.id !16
  %XAndY1126 = and i32 %shift1397, %conv.i, !instr.id !17
  %shift11127 = shl nuw nsw i32 %XAndY1126, 1, !instr.id !18
  %XXorY1128 = xor i32 %XXorY398, %shift1397, !instr.id !19
  %Result1129 = add nuw nsw i32 %shift11127, %XXorY1128, !instr.id !20
  %XAndY404 = and i32 %Result1129, %5, !instr.id !21
  %shift1405 = shl nuw nsw i32 %XAndY404, 1, !instr.id !22
  %XXorY406 = xor i32 %Result1129, %5, !instr.id !23
  %XAndY687 = and i32 %shift1405, %XXorY406, !instr.id !24
  %shift1688 = shl i32 %XAndY687, 1
  %XXorY689 = xor i32 %shift1405, %XXorY406, !instr.id !25
  %Result690 = add i32 %shift1688, %XXorY689, !instr.id !26
  %and.i = and i32 %Result690, %xor.i, !instr.id !27
  %6 = sub i32 0, %xor.i, !instr.id !28
  %XAndY33 = and i32 %xor.i, %6, !instr.id !29
  %shift134 = shl i32 %XAndY33, 1, !instr.id !30
  %XXorY35 = xor i32 %xor.i, %6, !instr.id !31
  %XAndY1294 = and i32 %shift134, %XXorY35, !instr.id !32
  %shift11295 = shl i32 %XAndY1294, 1, !instr.id !33
  %XXorY1296 = xor i32 %shift134, %XXorY35, !instr.id !34
  %Result1297 = add i32 %shift11295, %XXorY1296, !instr.id !35
  %sub.i = sub nsw i32 %Result1297, %and.i, !instr.id !36
  %XAndY276 = shl i32 %xor.i, 1, !instr.id !37
  %shift1277 = and i32 %XAndY276, 2, !instr.id !38
  %XXorY278 = xor i32 %xor.i, 1, !instr.id !39
  %XAndY863 = and i32 %shift1277, %xor.i, !instr.id !40
  %shift1864 = shl nuw nsw i32 %XAndY863, 1, !instr.id !41
  %XXorY865 = xor i32 %XXorY278, %shift1277, !instr.id !42
  %Result866 = add i32 %shift1864, %XXorY865, !instr.id !43
  %XAndY284 = and i32 %Result866, %6, !instr.id !44
  %shift1285 = shl i32 %XAndY284, 1, !instr.id !45
  %XXorY286 = xor i32 %Result866, %6, !instr.id !46
  %XAndY632 = and i32 %shift1285, %XXorY286, !instr.id !47
  %shift1633 = shl i32 %XAndY632, 1
  %XXorY634 = xor i32 %shift1285, %XXorY286, !instr.id !48
  %Result635 = add i32 %shift1633, %XXorY634, !instr.id !49
  %shr.i = lshr i32 %xor.i, %Result635, !instr.id !50
  %shift1337 = and i32 %XAndY396, 64, !instr.id !51
  %XXorY338 = xor i32 %conv.i, -306674912, !instr.id !52
  %XAndY1182 = and i32 %shift1337, %conv.i, !instr.id !53
  %shift11183 = shl nuw nsw i32 %XAndY1182, 1, !instr.id !54
  %XXorY1184 = xor i32 %XXorY338, %shift1337, !instr.id !55
  %Result1185 = add nsw i32 %shift11183, %XXorY1184, !instr.id !56
  %XAndY344 = and i32 %Result1185, %5, !instr.id !57
  %shift1345 = shl nsw i32 %XAndY344, 1, !instr.id !58
  %XXorY346 = xor i32 %Result1185, %5, !instr.id !59
  %XAndY592 = and i32 %shift1345, %XXorY346, !instr.id !60
  %shift1593 = shl i32 %XAndY592, 1
  %XXorY594 = xor i32 %shift1345, %XXorY346, !instr.id !61
  %Result595 = add i32 %shift1593, %XXorY594, !instr.id !62
  %and7.i = and i32 %sub.i, %Result595, !instr.id !63
  %xor8.i = xor i32 %and7.i, %shr.i, !instr.id !64
  %and.1.i = and i32 %shr.i, 1, !instr.id !65
  %sub.1.i = sub nsw i32 %Result1297, %and.1.i, !instr.id !66
  %shr.1.i = lshr i32 %xor8.i, 1, !instr.id !67
  %and7.1.i = and i32 %sub.1.i, -306674912, !instr.id !68
  %xor8.1.i = xor i32 %shr.1.i, %and7.1.i, !instr.id !69
  %7 = sub i32 0, %crc.024.i, !instr.id !70
  %XAndY181 = shl i32 %crc.024.i, 1, !instr.id !71
  %shift1182 = and i32 %XAndY181, 2, !instr.id !72
  %XXorY183 = xor i32 %crc.024.i, 1, !instr.id !73
  %XAndY811 = and i32 %shift1182, %crc.024.i, !instr.id !74
  %shift1812 = shl nuw nsw i32 %XAndY811, 1, !instr.id !75
  %XXorY813 = xor i32 %shift1182, %XXorY183, !instr.id !76
  %Result814 = add i32 %shift1812, %XXorY813, !instr.id !77
  %XAndY189 = and i32 %Result814, %7, !instr.id !78
  %shift1190 = shl i32 %XAndY189, 1, !instr.id !79
  %XXorY191 = xor i32 %Result814, %7, !instr.id !80
  %XAndY827 = and i32 %shift1190, %XXorY191, !instr.id !81
  %shift1828 = shl i32 %XAndY827, 1
  %XXorY829 = xor i32 %shift1190, %XXorY191, !instr.id !82
  %Result830 = add i32 %shift1828, %XXorY829, !instr.id !83
  %and.2.i = and i32 %shr.1.i, %Result830, !instr.id !84
  %8 = sub i32 0, %shift134, !instr.id !85
  %shift158 = shl i32 %XAndY33, 2, !instr.id !86
  %XXorY59 = xor i32 %shift134, %8, !instr.id !87
  %XAndY1274 = and i32 %XXorY59, %shift158, !instr.id !88
  %shift11275 = shl i32 %XAndY1274, 1, !instr.id !89
  %XXorY1276 = xor i32 %XXorY59, %shift158, !instr.id !90
  %Result1277 = add i32 %shift11275, %XXorY1276, !instr.id !91
  %sub.2.i = sub nsw i32 %Result1277, %and.2.i, !instr.id !92
  %9 = sub i32 0, %XXorY183, !instr.id !93
  %XAndY408 = shl i32 %XXorY183, 1, !instr.id !94
  %shift1409 = and i32 %XAndY408, 2, !instr.id !95
  %XAndY488 = and i32 %shift1409, %crc.024.i, !instr.id !96
  %shift1489 = shl nuw nsw i32 %XAndY488, 1, !instr.id !97
  %XXorY490 = xor i32 %shift1409, %crc.024.i, !instr.id !98
  %Result491 = add i32 %shift1489, %XXorY490, !instr.id !99
  %XAndY416 = and i32 %Result491, %9, !instr.id !100
  %shift1417 = shl i32 %XAndY416, 1, !instr.id !101
  %XXorY418 = xor i32 %Result491, %9, !instr.id !102
  %XAndY1162 = and i32 %shift1417, %XXorY418, !instr.id !103
  %shift11163 = shl i32 %XAndY1162, 1
  %XXorY1164 = xor i32 %shift1417, %XXorY418, !instr.id !104
  %Result1165 = add i32 %shift11163, %XXorY1164, !instr.id !105
  %shr.2.i = lshr i32 %xor8.1.i, %Result1165, !instr.id !106
  %XAndY61 = and i32 %8, -306674912, !instr.id !107
  %shift162 = shl i32 %XAndY61, 1, !instr.id !108
  %XXorY63 = xor i32 %8, -306674912, !instr.id !109
  %XAndY1022 = and i32 %shift162, %XXorY63, !instr.id !110
  %shift11023 = shl i32 %XAndY1022, 1, !instr.id !111
  %XXorY1024 = xor i32 %shift162, %XXorY63, !instr.id !112
  %Result1025 = add i32 %shift11023, %XXorY1024, !instr.id !113
  %XAndY69 = and i32 %Result1025, %shift134, !instr.id !114
  %shift170 = shl i32 %XAndY69, 1, !instr.id !115
  %XXorY71 = xor i32 %Result1025, %shift134, !instr.id !116
  %XAndY1026 = and i32 %shift170, %XXorY71, !instr.id !117
  %shift11027 = shl i32 %XAndY1026, 1
  %XXorY1028 = xor i32 %shift170, %XXorY71, !instr.id !118
  %Result1029 = add i32 %shift11027, %XXorY1028, !instr.id !119
  %and7.2.i = and i32 %sub.2.i, %Result1029, !instr.id !120
  %xor8.2.i = xor i32 %and7.2.i, %shr.2.i, !instr.id !121
  %XXorY4221298 = or i32 %shift134, 1, !instr.id !122
  %XXorY430 = xor i32 %XXorY4221298, %8, !instr.id !123
  %XAndY636 = and i32 %XXorY430, %shift158, !instr.id !124
  %shift1637 = shl i32 %XAndY636, 1, !instr.id !125
  %XXorY638 = xor i32 %XXorY430, %shift158, !instr.id !126
  %Result639 = add i32 %shift1637, %XXorY638, !instr.id !127
  %and.3.i = and i32 %shr.2.i, %Result639, !instr.id !128
  %sub.3.i = sub nsw i32 %Result1297, %and.3.i, !instr.id !129
  %10 = sub i32 0, %shift158, !instr.id !130
  %XXorY2541299 = or i32 %shift158, 1, !instr.id !131
  %shift1261 = shl i32 %XAndY33, 3, !instr.id !132
  %XXorY262 = xor i32 %XXorY2541299, %10, !instr.id !133
  %XAndY942 = and i32 %XXorY262, %shift1261, !instr.id !134
  %shift1943 = shl i32 %XAndY942, 1
  %XXorY944 = xor i32 %XXorY262, %shift1261, !instr.id !135
  %Result945 = add i32 %shift1943, %XXorY944, !instr.id !136
  %shr.3.i = lshr i32 %xor8.2.i, %Result945, !instr.id !137
  %XAndY217 = shl i32 %6, 1, !instr.id !138
  %shift1218 = and i32 %XAndY217, -613349824, !instr.id !139
  %XXorY219 = xor i32 %6, -306674912, !instr.id !140
  %XAndY1146 = and i32 %shift1218, %XXorY219, !instr.id !141
  %shift11147 = shl i32 %XAndY1146, 1, !instr.id !142
  %XXorY1148 = xor i32 %shift1218, %XXorY219, !instr.id !143
  %Result1149 = add i32 %shift11147, %XXorY1148, !instr.id !144
  %XAndY225 = and i32 %Result1149, %xor.i, !instr.id !145
  %shift1226 = shl i32 %XAndY225, 1, !instr.id !146
  %XXorY227 = xor i32 %Result1149, %xor.i, !instr.id !147
  %XAndY572 = and i32 %shift1226, %XXorY227, !instr.id !148
  %shift1573 = shl i32 %XAndY572, 1
  %XXorY574 = xor i32 %shift1226, %XXorY227, !instr.id !149
  %Result575 = add i32 %shift1573, %XXorY574, !instr.id !150
  %and7.3.i = and i32 %sub.3.i, %Result575, !instr.id !151
  %xor8.3.i = xor i32 %and7.3.i, %shr.3.i, !instr.id !152
  %and.4.i = and i32 %shr.3.i, %Result639, !instr.id !153
  %11 = sub i32 0, %xor8.2.i, !instr.id !154
  %XAndY45 = and i32 %xor8.2.i, %11, !instr.id !155
  %shift146 = shl i32 %XAndY45, 1, !instr.id !156
  %XXorY47 = xor i32 %xor8.2.i, %11, !instr.id !157
  %XAndY512 = and i32 %shift146, %XXorY47, !instr.id !158
  %shift1513 = shl i32 %XAndY512, 1
  %XXorY514 = xor i32 %shift146, %XXorY47, !instr.id !159
  %Result515 = sub i32 %XXorY514, %and.4.i
  %sub.4.i = add i32 %Result515, %shift1513, !instr.id !160
  %12 = sub i32 0, %xor8.1.i, !instr.id !161
  %shift1134 = and i32 %xor8.i, 2, !instr.id !162
  %XAndY1222 = and i32 %shift1134, %shr.1.i, !instr.id !163
  %shift11223 = shl nuw nsw i32 %XAndY1222, 1, !instr.id !164
  %XXorY1351303 = or i32 %shift1134, 1, !instr.id !165
  %XXorY1224 = xor i32 %XXorY1351303, %xor8.1.i, !instr.id !166
  %Result1225 = add i32 %XXorY1224, %shift11223, !instr.id !167
  %XAndY141 = and i32 %Result1225, %12, !instr.id !168
  %shift1142 = shl i32 %XAndY141, 1, !instr.id !169
  %XXorY143 = xor i32 %Result1225, %12, !instr.id !170
  %XAndY867 = and i32 %shift1142, %XXorY143, !instr.id !171
  %shift1868 = shl i32 %XAndY867, 1
  %XXorY869 = xor i32 %shift1142, %XXorY143, !instr.id !172
  %Result870 = add i32 %shift1868, %XXorY869, !instr.id !173
  %shr.4.i = lshr i32 %xor8.3.i, %Result870, !instr.id !174
  %XAndY193 = shl i32 %12, 1, !instr.id !175
  %shift1194 = and i32 %XAndY193, -613349824, !instr.id !176
  %XXorY195 = xor i32 %12, -306674912, !instr.id !177
  %XAndY1210 = and i32 %shift1194, %XXorY195, !instr.id !178
  %shift11211 = shl i32 %XAndY1210, 1, !instr.id !179
  %XXorY1212 = xor i32 %shift1194, %XXorY195, !instr.id !180
  %Result1213 = add i32 %shift11211, %XXorY1212, !instr.id !181
  %XAndY201 = and i32 %Result1213, %xor8.1.i, !instr.id !182
  %shift1202 = shl i32 %XAndY201, 1, !instr.id !183
  %XXorY203 = xor i32 %Result1213, %xor8.1.i, !instr.id !184
  %XAndY871 = and i32 %shift1202, %XXorY203, !instr.id !185
  %shift1872 = shl i32 %XAndY871, 1
  %XXorY873 = xor i32 %shift1202, %XXorY203, !instr.id !186
  %Result874 = add i32 %shift1872, %XXorY873, !instr.id !187
  %and7.4.i = and i32 %Result874, %sub.4.i, !instr.id !188
  %xor8.4.i = xor i32 %and7.4.i, %shr.4.i, !instr.id !189
  %and.5.i = and i32 %shr.4.i, 1, !instr.id !190
  %13 = insertelement <2 x i32> undef, i32 %shr.4.i, i32 0
  %14 = insertelement <2 x i32> %13, i32 %Result1277, i32 1
  %15 = sub <2 x i32> zeroinitializer, %14
  %XAndY240 = shl i32 %shr.4.i, 1, !instr.id !191
  %shift1241 = and i32 %XAndY240, -613349824, !instr.id !192
  %XXorY242 = xor i32 %shr.4.i, -306674912, !instr.id !193
  %XAndY1166 = and i32 %shift1241, %XXorY242, !instr.id !194
  %shift11167 = shl i32 %XAndY1166, 1
  %XXorY1168 = xor i32 %shift1241, %XXorY242, !instr.id !195
  %Result1169 = add i32 %shift11167, %XXorY1168, !instr.id !196
  %16 = insertelement <2 x i32> undef, i32 %Result1169, i32 0
  %17 = insertelement <2 x i32> %16, i32 %Result1277, i32 1
  %18 = and <2 x i32> %17, %15
  %19 = shl <2 x i32> %18, <i32 1, i32 1>
  %20 = xor <2 x i32> %17, %15
  %21 = and <2 x i32> %19, %20
  %22 = shl <2 x i32> %21, <i32 1, i32 1>
  %23 = xor <2 x i32> %19, %20
  %24 = add <2 x i32> %22, %23
  %25 = extractelement <2 x i32> %24, i32 1, !instr.id !197
  %sub.5.i = sub i32 %25, %and.5.i, !instr.id !198
  %shr.5.i = lshr i32 %xor8.4.i, 1, !instr.id !199
  %26 = extractelement <2 x i32> %24, i32 0, !instr.id !200
  %and7.5.i = and i32 %sub.5.i, %26, !instr.id !201
  %xor8.5.i = xor i32 %and7.5.i, %shr.5.i, !instr.id !202
  %27 = sub i32 0, %and.3.i, !instr.id !203
  %XAndY121 = shl i32 %and.3.i, 1, !instr.id !204
  %shift1122 = and i32 %XAndY121, 2, !instr.id !205
  %XXorY123 = xor i32 %and.3.i, 1, !instr.id !206
  %XAndY751 = and i32 %shift1122, %and.3.i, !instr.id !207
  %shift1752 = shl nuw nsw i32 %XAndY751, 1, !instr.id !208
  %XXorY753 = xor i32 %XXorY123, %shift1122, !instr.id !209
  %Result754 = add i32 %shift1752, %XXorY753, !instr.id !210
  %XAndY129 = and i32 %Result754, %27, !instr.id !211
  %shift1130 = shl i32 %XAndY129, 1, !instr.id !212
  %XXorY131 = xor i32 %Result754, %27, !instr.id !213
  %XAndY966 = and i32 %shift1130, %XXorY131, !instr.id !214
  %shift1967 = shl i32 %XAndY966, 1
  %XXorY968 = xor i32 %shift1130, %XXorY131, !instr.id !215
  %Result969 = add i32 %shift1967, %XXorY968, !instr.id !216
  %and.6.i = and i32 %shr.5.i, %Result969, !instr.id !217
  %sub.6.i = sub nsw i32 %Result1297, %and.6.i, !instr.id !218
  %shr.6.i = lshr i32 %xor8.5.i, 1, !instr.id !219
  %shift12 = and i32 %XAndY121, -613349824, !instr.id !220
  %XXorY3 = xor i32 %and.3.i, -306674912, !instr.id !221
  %XAndY1170 = and i32 %shift12, %XXorY3, !instr.id !222
  %shift11171 = shl i32 %XAndY1170, 1, !instr.id !223
  %XXorY1172 = xor i32 %shift12, %XXorY3, !instr.id !224
  %Result1173 = add i32 %shift11171, %XXorY1172, !instr.id !225
  %XAndY9 = and i32 %Result1173, %27, !instr.id !226
  %shift110 = shl i32 %XAndY9, 1, !instr.id !227
  %XXorY11 = xor i32 %Result1173, %27, !instr.id !228
  %XAndY795 = and i32 %shift110, %XXorY11, !instr.id !229
  %shift1796 = shl i32 %XAndY795, 1
  %XXorY797 = xor i32 %shift110, %XXorY11, !instr.id !230
  %Result798 = add i32 %shift1796, %XXorY797, !instr.id !231
  %and7.6.i = and i32 %sub.6.i, %Result798, !instr.id !232
  %xor8.6.i = xor i32 %shr.6.i, %and7.6.i, !instr.id !233
  %XAndY348 = shl i32 %7, 1, !instr.id !234
  %shift1349 = and i32 %XAndY348, 2, !instr.id !235
  %XXorY350 = xor i32 %7, 1, !instr.id !236
  %XAndY831 = and i32 %shift1349, %7, !instr.id !237
  %shift1832 = shl nuw nsw i32 %XAndY831, 1, !instr.id !238
  %XXorY833 = xor i32 %XXorY350, %shift1349, !instr.id !239
  %Result834 = add i32 %shift1832, %XXorY833, !instr.id !240
  %XAndY356 = and i32 %Result834, %crc.024.i, !instr.id !241
  %shift1357 = shl i32 %XAndY356, 1, !instr.id !242
  %XXorY358 = xor i32 %Result834, %crc.024.i, !instr.id !243
  %XAndY484 = and i32 %shift1357, %XXorY358, !instr.id !244
  %shift1485 = shl i32 %XAndY484, 1
  %XXorY486 = xor i32 %shift1357, %XXorY358, !instr.id !245
  %Result487 = add i32 %shift1485, %XXorY486, !instr.id !246
  %and.7.i = and i32 %shr.6.i, %Result487, !instr.id !247
  %28 = sub i32 0, %XAndY61, !instr.id !248
  %XAndY308 = and i32 %XAndY61, %28, !instr.id !249
  %shift1309 = shl i32 %XAndY308, 1, !instr.id !250
  %XXorY310 = xor i32 %XAndY61, %28, !instr.id !251
  %XAndY1154 = and i32 %shift1309, %XXorY310, !instr.id !252
  %shift11155 = shl i32 %XAndY1154, 1
  %XXorY1156 = xor i32 %shift1309, %XXorY310, !instr.id !253
  %Result1157 = add i32 %shift11155, %XXorY1156, !instr.id !254
  %sub.7.i = sub i32 %Result1157, %and.7.i
  %29 = sub i32 0, %and7.5.i, !instr.id !255
  %XAndY13 = shl i32 %and7.5.i, 1, !instr.id !256
  %shift114 = and i32 %XAndY13, 2, !instr.id !257
  %XXorY15 = xor i32 %and7.5.i, 1, !instr.id !258
  %XAndY839 = and i32 %shift114, %and7.5.i, !instr.id !259
  %shift1840 = shl nuw nsw i32 %XAndY839, 1, !instr.id !260
  %XXorY841 = xor i32 %XXorY15, %shift114, !instr.id !261
  %Result842 = add i32 %shift1840, %XXorY841, !instr.id !262
  %XAndY21 = and i32 %Result842, %29, !instr.id !263
  %shift122 = shl i32 %XAndY21, 1, !instr.id !264
  %XXorY23 = xor i32 %Result842, %29, !instr.id !265
  %XAndY759 = and i32 %shift122, %XXorY23, !instr.id !266
  %shift1760 = shl i32 %XAndY759, 1
  %XXorY761 = xor i32 %shift122, %XXorY23, !instr.id !267
  %Result762 = add i32 %shift1760, %XXorY761, !instr.id !268
  %shr.7.i = lshr i32 %xor8.6.i, %Result762, !instr.id !269
  %XAndY288 = shl i32 %xor8.2.i, 1, !instr.id !270
  %shift1289 = and i32 %XAndY288, -613349824, !instr.id !271
  %XXorY290 = xor i32 %xor8.2.i, -306674912, !instr.id !272
  %XAndY1186 = and i32 %shift1289, %XXorY290, !instr.id !273
  %shift11187 = shl i32 %XAndY1186, 1, !instr.id !274
  %XXorY1188 = xor i32 %shift1289, %XXorY290, !instr.id !275
  %Result1189 = add i32 %shift11187, %XXorY1188, !instr.id !276
  %XAndY296 = and i32 %Result1189, %11, !instr.id !277
  %shift1297 = shl i32 %XAndY296, 1, !instr.id !278
  %XXorY298 = xor i32 %Result1189, %11, !instr.id !279
  %XAndY807 = and i32 %shift1297, %XXorY298, !instr.id !280
  %shift1808 = shl i32 %XAndY807, 1
  %XXorY809 = xor i32 %shift1297, %XXorY298, !instr.id !281
  %Result810 = add i32 %shift1808, %XXorY809, !instr.id !282
  %and7.7.i = and i32 %sub.7.i, %Result810, !instr.id !283
  %xor8.7.i = xor i32 %shr.7.i, %and7.7.i, !instr.id !284
  %30 = zext i32 %and.5.i to i64, !instr.id !285
  %31 = sub nsw i64 0, %30, !instr.id !286
  %32 = shl nuw nsw i32 %and.5.i, 1, !instr.id !287
  %33 = or i32 %32, %and.5.i, !instr.id !288
  %34 = xor i32 %33, 1, !instr.id !289
  %XXorY5341301 = zext i32 %34 to i64, !instr.id !290
  %XAndY380 = and i64 %XXorY5341301, %31, !instr.id !291
  %shift1381 = shl nuw nsw i64 %XAndY380, 1, !instr.id !292
  %XXorY382 = xor i64 %XXorY5341301, %31, !instr.id !293
  %XAndY536 = and i64 %shift1381, %XXorY382, !instr.id !294
  %shift1537 = shl nuw nsw i64 %XAndY536, 1
  %XXorY538 = xor i64 %shift1381, %XXorY382, !instr.id !295
  %Result539 = add nsw i64 %shift1537, %XXorY538, !instr.id !296
  %XAndY = and i64 %Result539, %indvars.iv.i, !instr.id !297
  %shift1 = shl i64 %XAndY, 1, !instr.id !298
  %35 = zext i32 %shift146 to i64, !instr.id !299
  %36 = sub nsw i64 0, %35, !instr.id !300
  %XXorY1111302 = or i64 %35, 1, !instr.id !301
  %shift1118 = shl nuw nsw i64 %35, 1, !instr.id !302
  %XXorY119 = xor i64 %XXorY1111302, %36, !instr.id !303
  %XAndY1206 = and i64 %XXorY119, %shift1118, !instr.id !304
  %shift11207 = shl nuw nsw i64 %XAndY1206, 1
  %XXorY1208 = xor i64 %XXorY119, %shift1118, !instr.id !305
  %Result1209 = add nsw i64 %shift11207, %XXorY1208, !instr.id !306
  %XXorY = xor i64 %Result1209, %indvars.iv.i, !instr.id !307
  %XAndY903 = and i64 %shift1, %XXorY, !instr.id !308
  %shift1904 = shl i64 %XAndY903, 1, !instr.id !309
  %XXorY905 = xor i64 %shift1, %XXorY, !instr.id !310
  %Result906 = add i64 %shift1904, %XXorY905, !instr.id !311
  %arrayidx.i = getelementptr inbounds i8, i8* %2, i64 %Result906
  %37 = load i8, i8* %arrayidx.i, align 1, !tbaa !8, !instr.id !312
  %cmp.i = icmp eq i8 %37, 0, !instr.id !313
  br i1 %cmp.i, label %while.end.loopexit.i, label %while.body.i

while.end.loopexit.i:                             ; preds = %while.body.i
  %38 = sub i32 0, %argc, !instr.id !314
  %shift1229 = shl i32 %argc, 1, !instr.id !315
  %XXorY230 = xor i32 %argc, -1, !instr.id !316
  %XAndY1242 = and i32 %shift1229, %XXorY230, !instr.id !317
  %shift11243 = shl i32 %XAndY1242, 1, !instr.id !318
  %XXorY1244 = xor i32 %shift1229, %XXorY230, !instr.id !319
  %Result1245 = add i32 %shift11243, %XXorY1244, !instr.id !320
  %XAndY236 = and i32 %Result1245, %38, !instr.id !321
  %shift1237 = shl i32 %XAndY236, 1, !instr.id !322
  %XXorY238 = xor i32 %Result1245, %38, !instr.id !323
  %XAndY994 = and i32 %shift1237, %XXorY238, !instr.id !324
  %shift1995 = shl i32 %XAndY994, 1
  %XXorY996 = xor i32 %shift1237, %XXorY238, !instr.id !325
  %Result997 = add i32 %shift1995, %XXorY996, !instr.id !326
  %phitmp.i = xor i32 %xor8.7.i, %Result997, !instr.id !327
  br label %crc32.exit

crc32.exit:                                       ; preds = %while.end.loopexit.i, %if.end
  %crc.0.lcssa.i = phi i32 [ 0, %if.end ], [ %phitmp.i, %while.end.loopexit.i ]
  %call3 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 %crc.0.lcssa.i, i8* %2), !instr.id !328
  br label %return

return:                                           ; preds = %crc32.exit, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %crc32.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
declare dso_local i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #1

; Function Attrs: nounwind
declare dso_local i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 8.0.1 "}
!2 = !{i64 0}
!3 = !{!4, !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C/C++ TBAA"}
!7 = !{i64 1}
!8 = !{!5, !5, i64 0}
!9 = !{i64 2}
!10 = !{i64 3}
!11 = !{i64 4}
!12 = !{i64 5}
!13 = !{i64 6}
!14 = !{i64 7}
!15 = !{i64 8}
!16 = !{i64 9}
!17 = !{i64 10}
!18 = !{i64 11}
!19 = !{i64 12}
!20 = !{i64 13}
!21 = !{i64 14}
!22 = !{i64 15}
!23 = !{i64 16}
!24 = !{i64 17}
!25 = !{i64 19}
!26 = !{i64 20}
!27 = !{i64 21}
!28 = !{i64 22}
!29 = !{i64 23}
!30 = !{i64 24}
!31 = !{i64 25}
!32 = !{i64 26}
!33 = !{i64 27}
!34 = !{i64 28}
!35 = !{i64 29}
!36 = !{i64 30}
!37 = !{i64 31}
!38 = !{i64 32}
!39 = !{i64 33}
!40 = !{i64 34}
!41 = !{i64 35}
!42 = !{i64 36}
!43 = !{i64 37}
!44 = !{i64 38}
!45 = !{i64 39}
!46 = !{i64 40}
!47 = !{i64 41}
!48 = !{i64 43}
!49 = !{i64 44}
!50 = !{i64 45}
!51 = !{i64 46}
!52 = !{i64 47}
!53 = !{i64 48}
!54 = !{i64 49}
!55 = !{i64 50}
!56 = !{i64 51}
!57 = !{i64 52}
!58 = !{i64 53}
!59 = !{i64 54}
!60 = !{i64 55}
!61 = !{i64 57}
!62 = !{i64 58}
!63 = !{i64 59}
!64 = !{i64 60}
!65 = !{i64 61}
!66 = !{i64 62}
!67 = !{i64 63}
!68 = !{i64 64}
!69 = !{i64 65}
!70 = !{i64 66}
!71 = !{i64 67}
!72 = !{i64 68}
!73 = !{i64 69}
!74 = !{i64 70}
!75 = !{i64 71}
!76 = !{i64 72}
!77 = !{i64 73}
!78 = !{i64 74}
!79 = !{i64 75}
!80 = !{i64 76}
!81 = !{i64 77}
!82 = !{i64 79}
!83 = !{i64 80}
!84 = !{i64 81}
!85 = !{i64 82}
!86 = !{i64 83}
!87 = !{i64 84}
!88 = !{i64 85}
!89 = !{i64 86}
!90 = !{i64 87}
!91 = !{i64 88}
!92 = !{i64 89}
!93 = !{i64 90}
!94 = !{i64 91}
!95 = !{i64 92}
!96 = !{i64 93}
!97 = !{i64 94}
!98 = !{i64 95}
!99 = !{i64 96}
!100 = !{i64 97}
!101 = !{i64 98}
!102 = !{i64 99}
!103 = !{i64 100}
!104 = !{i64 102}
!105 = !{i64 103}
!106 = !{i64 104}
!107 = !{i64 105}
!108 = !{i64 106}
!109 = !{i64 107}
!110 = !{i64 108}
!111 = !{i64 109}
!112 = !{i64 110}
!113 = !{i64 111}
!114 = !{i64 112}
!115 = !{i64 113}
!116 = !{i64 114}
!117 = !{i64 115}
!118 = !{i64 117}
!119 = !{i64 118}
!120 = !{i64 119}
!121 = !{i64 120}
!122 = !{i64 121}
!123 = !{i64 122}
!124 = !{i64 123}
!125 = !{i64 124}
!126 = !{i64 125}
!127 = !{i64 126}
!128 = !{i64 127}
!129 = !{i64 128}
!130 = !{i64 129}
!131 = !{i64 130}
!132 = !{i64 131}
!133 = !{i64 132}
!134 = !{i64 133}
!135 = !{i64 135}
!136 = !{i64 136}
!137 = !{i64 137}
!138 = !{i64 138}
!139 = !{i64 139}
!140 = !{i64 140}
!141 = !{i64 141}
!142 = !{i64 142}
!143 = !{i64 143}
!144 = !{i64 144}
!145 = !{i64 145}
!146 = !{i64 146}
!147 = !{i64 147}
!148 = !{i64 148}
!149 = !{i64 150}
!150 = !{i64 151}
!151 = !{i64 152}
!152 = !{i64 153}
!153 = !{i64 154}
!154 = !{i64 155}
!155 = !{i64 156}
!156 = !{i64 157}
!157 = !{i64 158}
!158 = !{i64 159}
!159 = !{i64 161}
!160 = !{i64 163}
!161 = !{i64 164}
!162 = !{i64 165}
!163 = !{i64 166}
!164 = !{i64 167}
!165 = !{i64 168}
!166 = !{i64 169}
!167 = !{i64 170}
!168 = !{i64 171}
!169 = !{i64 172}
!170 = !{i64 173}
!171 = !{i64 174}
!172 = !{i64 176}
!173 = !{i64 177}
!174 = !{i64 178}
!175 = !{i64 179}
!176 = !{i64 180}
!177 = !{i64 181}
!178 = !{i64 182}
!179 = !{i64 183}
!180 = !{i64 184}
!181 = !{i64 185}
!182 = !{i64 186}
!183 = !{i64 187}
!184 = !{i64 188}
!185 = !{i64 189}
!186 = !{i64 191}
!187 = !{i64 192}
!188 = !{i64 193}
!189 = !{i64 194}
!190 = !{i64 195}
!191 = !{i64 196}
!192 = !{i64 197}
!193 = !{i64 198}
!194 = !{i64 199}
!195 = !{i64 201}
!196 = !{i64 202}
!197 = !{i64 203}
!198 = !{i64 204}
!199 = !{i64 205}
!200 = !{i64 206}
!201 = !{i64 207}
!202 = !{i64 208}
!203 = !{i64 209}
!204 = !{i64 210}
!205 = !{i64 211}
!206 = !{i64 212}
!207 = !{i64 213}
!208 = !{i64 214}
!209 = !{i64 215}
!210 = !{i64 216}
!211 = !{i64 217}
!212 = !{i64 218}
!213 = !{i64 219}
!214 = !{i64 220}
!215 = !{i64 222}
!216 = !{i64 223}
!217 = !{i64 224}
!218 = !{i64 225}
!219 = !{i64 226}
!220 = !{i64 227}
!221 = !{i64 228}
!222 = !{i64 229}
!223 = !{i64 230}
!224 = !{i64 231}
!225 = !{i64 232}
!226 = !{i64 233}
!227 = !{i64 234}
!228 = !{i64 235}
!229 = !{i64 236}
!230 = !{i64 238}
!231 = !{i64 239}
!232 = !{i64 240}
!233 = !{i64 241}
!234 = !{i64 242}
!235 = !{i64 243}
!236 = !{i64 244}
!237 = !{i64 245}
!238 = !{i64 246}
!239 = !{i64 247}
!240 = !{i64 248}
!241 = !{i64 249}
!242 = !{i64 250}
!243 = !{i64 251}
!244 = !{i64 252}
!245 = !{i64 254}
!246 = !{i64 255}
!247 = !{i64 256}
!248 = !{i64 257}
!249 = !{i64 258}
!250 = !{i64 259}
!251 = !{i64 260}
!252 = !{i64 261}
!253 = !{i64 263}
!254 = !{i64 264}
!255 = !{i64 266}
!256 = !{i64 267}
!257 = !{i64 268}
!258 = !{i64 269}
!259 = !{i64 270}
!260 = !{i64 271}
!261 = !{i64 272}
!262 = !{i64 273}
!263 = !{i64 274}
!264 = !{i64 275}
!265 = !{i64 276}
!266 = !{i64 277}
!267 = !{i64 279}
!268 = !{i64 280}
!269 = !{i64 281}
!270 = !{i64 282}
!271 = !{i64 283}
!272 = !{i64 284}
!273 = !{i64 285}
!274 = !{i64 286}
!275 = !{i64 287}
!276 = !{i64 288}
!277 = !{i64 289}
!278 = !{i64 290}
!279 = !{i64 291}
!280 = !{i64 292}
!281 = !{i64 294}
!282 = !{i64 295}
!283 = !{i64 296}
!284 = !{i64 297}
!285 = !{i64 298}
!286 = !{i64 299}
!287 = !{i64 300}
!288 = !{i64 301}
!289 = !{i64 302}
!290 = !{i64 303}
!291 = !{i64 304}
!292 = !{i64 305}
!293 = !{i64 306}
!294 = !{i64 307}
!295 = !{i64 309}
!296 = !{i64 310}
!297 = !{i64 311}
!298 = !{i64 312}
!299 = !{i64 313}
!300 = !{i64 314}
!301 = !{i64 315}
!302 = !{i64 316}
!303 = !{i64 317}
!304 = !{i64 318}
!305 = !{i64 320}
!306 = !{i64 321}
!307 = !{i64 322}
!308 = !{i64 323}
!309 = !{i64 324}
!310 = !{i64 325}
!311 = !{i64 326}
!312 = !{i64 327}
!313 = !{i64 328}
!314 = !{i64 329}
!315 = !{i64 330}
!316 = !{i64 331}
!317 = !{i64 332}
!318 = !{i64 333}
!319 = !{i64 334}
!320 = !{i64 335}
!321 = !{i64 336}
!322 = !{i64 337}
!323 = !{i64 338}
!324 = !{i64 339}
!325 = !{i64 341}
!326 = !{i64 342}
!327 = !{i64 343}
!328 = !{i64 344}
